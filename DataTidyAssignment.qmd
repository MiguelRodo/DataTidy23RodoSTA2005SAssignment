---
title: Create tidy data for 2023 STA2005S assignment
format:
  html:
    embed-resources: true
---

# Introduction


```{r}
library(ggplot2)
```

```{r}
set.seed(123) # To ensure reproducibility

# Number of observations
n <- 125

# Independent Variables

# Rainfall: Introduce some outliers by mixing two distributions
x1 <- c(runif(0.9 * n, 50, 200), runif(0.1 * n - 1, 250, 300))
x1 <- c(x1, runif(n - length(x1), min = 420, max = 450))

# Avg temp with mean 22°C and sd 5°C
x2a <- rnorm(
  n,
  mean = 22 + (x1 - mean(x1))/sd(x1) * 3,
  sd = 4
  )

# Avg temp with mean
x2b <- celsius_to_fahrenheit(x2a)

# Fertilizer type
x3 <- sample(c("MaizeMate", "CornCare", "KernelKindle"), n, replace = TRUE)

# Sunlight: Introduce high leverage points by adding extreme values
x4 <- c(runif(0.9 * n, 5, 15), runif(ceiling(0.025 * n), 18, 20))
x4 <- x4[ifelse(x1 == 400, 21, x4)]

# Soil pH: Make it correlated with Temperature
x5 <- x2a / 12 + 2.5 + rnorm(n, mean = 0, sd = 1)

# Additional variable with a weak relationship with the response
x6 <- runif(n, 1, 10)

# Distance to nearest water body (0 to 20 km)
distance_to_water <- runif(n, 0, 20)

# Altitude (100 to 2000 meters above sea level)
altitude <- rnorm(
  n = n,
  mean = 2000 - x1 * 4,
  sd = 20
)

# Pesticide applied (1 for Yes, 0 for No)
pesticide_applied <- sample(
  c("No", "Yes"), size = n, replace = TRUE, prob = c(0.5, 0.5)
  ) # Assuming 50% chance of application

# Irrigation type
irrigation_types <- c("Drip", "Sprinkler", "Flood", "None")
irrigation <- sample(irrigation_types, n, replace = TRUE, prob = c(0.3, 0.3, 0.3, 0.1)) # Adjust probabilities if needed


# Simulating Crop Yields
epsilon <- rnorm(n, mean = 0, sd = 2)
crop_yield <- 20 + 
  0.03 * x1 - 
  0.1 * x2a + 
  0.02 * x4 + 
  1.5 * x5 + 
  0.01 * x6 + 
  0.001 * distance_to_water - # small positive effect
  0.00001 * altitude + # small negative effect
  epsilon

# Adjust the effect of the irrigation by setting a small effect depending on the type
irrigation_effect <- dplyr::case_when(
  irrigation == "Drip" ~ 0.05, # Small positive effect
  irrigation == "Sprinkler" ~ 0.03, # Smaller positive effect
  irrigation == "Flood" ~ -0.02, # Small negative effect
  irrigation == "None" ~ 0 # No effect
)

fertilizer_effect <- dplyr::case_when(
  x3 == "MaizeMate" ~ 0.05, # Small positive effect
  x3 == "CornCare" ~ 0.03, # Smaller positive effect
  x3 == "KernelKindle" ~ -0.02 # Small negative effect
)

pesticide_effect <- dplyr::case_when(
  pesticide_applied == "Yes" ~ 0.2, 
  pesticide_applied == "No" ~ 0
)

crop_yield <- crop_yield + irrigation_effect + fertilizer_effect + pesticide_effect

# Create data frame
data_tidy_yield <- tibble::tibble(
  CropYield = crop_yield,
  Rainfall = x1,
  TempC = x2a,
  TempF = x2b,
  Fertilizer = x3,
  Sunlight = x4,
  SoilPH = x5,
  WindSpeed = x6,
  DistanceToWater = distance_to_water,
  Altitude = altitude,
  PesticideApplied = pesticide_applied,
  Irrigation = irrigation
) |>
  dplyr::slice_sample(prop = 1)

p <- GGally::ggpairs(
  data = data_tidy_yield |>
    dplyr::select(CropYield:TempF, SoilPH, WindSpeed,
    DistanceToWater, Altitude
    )
)
sv(fn = "p.png", plot = p, width = 20, height = 20)
p <- ggplot(
  data_tidy_yield |>
    dplyr::select(CropYield, Fertilizer, PesticideApplied, Irrigation) |>
    tidyr::pivot_longer(
      Fertilizer:Irrigation,
      values_to = "Value",
      names_to = "Category"
    ),
  aes(y = CropYield, x = Value, fill = Value)
) +
  geom_boxplot() +
  facet_wrap(~Category, ncol = 3, scales = "free_x")
sv(fn = "p-cat.png", plot = p, width = 20, height = 20)

summary(lm(CropYield ~ ., data = data_tidy_yield))
```
